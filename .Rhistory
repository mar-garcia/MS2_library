# Get all isomers of metabolite "i":
if(mtbls[i] %in%
c("Phloretin", "Phloretin glucuronide", "(Epi)catechin",
"(Epi)catechin glucuronide", "(Epi)catechin-methyl glucuronide",
"(Epi)catechin-methyl sulfate")){
cmps.i <- cmps[mtbls[i] == cmps$cmp,]
} else if(mtbls[i] == "Dihydroxyphenyl-y-valerolactone glucuronide"){
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
cmps.i <- cmps.i[!grepl("sulfate", cmps.i$cmp),]
} else {
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
}
cmps.i
if(nrow(cmps.i) > 1){
flnm <- substr(cmps.i$abr[1], 1, (nchar(cmps$abr[i])-2))
} else{
flnm <- cmps$abr
}
flnm <- paste0("plots/", substr(cmps.i$M[1], 1, 4), "_", flnm, ".jpeg")
flnm
i=2
(mtbls[i]
mtbls[i]
if(mtbls[i] %in%
c("Phloretin", "Phloretin glucuronide", "(Epi)catechin",
"(Epi)catechin glucuronide", "(Epi)catechin-methyl glucuronide",
"(Epi)catechin-methyl sulfate")){
cmps.i <- cmps[mtbls[i] == cmps$cmp,]
} else if(mtbls[i] == "Dihydroxyphenyl-y-valerolactone glucuronide"){
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
cmps.i <- cmps.i[!grepl("sulfate", cmps.i$cmp),]
} else {
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
}
cmps.i
cmps.i$abr
i=14
# Get all isomers of metabolite "i":
if(mtbls[i] %in%
c("Phloretin", "Phloretin glucuronide", "(Epi)catechin",
"(Epi)catechin glucuronide", "(Epi)catechin-methyl glucuronide",
"(Epi)catechin-methyl sulfate")){
cmps.i <- cmps[mtbls[i] == cmps$cmp,]
} else if(mtbls[i] == "Dihydroxyphenyl-y-valerolactone glucuronide"){
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
cmps.i <- cmps.i[!grepl("sulfate", cmps.i$cmp),]
} else {
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
}
cmps.i
if(nrow(cmps.i) > 1){
flnm <- substr(cmps.i$abr[1], 1, (nchar(cmps.i$abr[i])-2))
} else{
flnm <- cmps.i$abr
}
flnm <- paste0("plots/", substr(cmps.i$M[1], 1, 4), "_", flnm, ".jpeg")
flnm
if(nrow(cmps.i) > 1){
flnm <- substr(cmps.i$abr[1], 1, (nchar(cmps.i$abr[1])-2))
} else{
flnm <- cmps.i$abr
}
flnm <- paste0("plots/", substr(cmps.i$M[1], 1, 4), "_", flnm, ".jpeg")
flnm
i=15
if(mtbls[i] %in%
c("Phloretin", "Phloretin glucuronide", "(Epi)catechin",
"(Epi)catechin glucuronide", "(Epi)catechin-methyl glucuronide",
"(Epi)catechin-methyl sulfate")){
cmps.i <- cmps[mtbls[i] == cmps$cmp,]
} else if(mtbls[i] == "Dihydroxyphenyl-y-valerolactone glucuronide"){
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
cmps.i <- cmps.i[!grepl("sulfate", cmps.i$cmp),]
} else {
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
}
if(nrow(cmps.i) > 1){
flnm <- substr(cmps.i$abr[1], 1, (nchar(cmps.i$abr[1])-2))
} else{
flnm <- cmps.i$abr
}
flnm
i=16
if(mtbls[i] %in%
c("Phloretin", "Phloretin glucuronide", "(Epi)catechin",
"(Epi)catechin glucuronide", "(Epi)catechin-methyl glucuronide",
"(Epi)catechin-methyl sulfate")){
cmps.i <- cmps[mtbls[i] == cmps$cmp,]
} else if(mtbls[i] == "Dihydroxyphenyl-y-valerolactone glucuronide"){
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
cmps.i <- cmps.i[!grepl("sulfate", cmps.i$cmp),]
} else {
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
}
if(nrow(cmps.i) > 1){
flnm <- substr(cmps.i$abr[1], 1, (nchar(cmps.i$abr[1])-2))
} else{
flnm <- cmps.i$abr
}
flnm
i=17
# Get all isomers of metabolite "i":
if(mtbls[i] %in%
c("Phloretin", "Phloretin glucuronide", "(Epi)catechin",
"(Epi)catechin glucuronide", "(Epi)catechin-methyl glucuronide",
"(Epi)catechin-methyl sulfate")){
cmps.i <- cmps[mtbls[i] == cmps$cmp,]
} else if(mtbls[i] == "Dihydroxyphenyl-y-valerolactone glucuronide"){
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
cmps.i <- cmps.i[!grepl("sulfate", cmps.i$cmp),]
} else {
cmps.i <- cmps[grep(mtbls[i], cmps$cmp),]
}
if(nrow(cmps.i) > 1){
flnm <- substr(cmps.i$abr[1], 1, (nchar(cmps.i$abr[1])-2))
} else{
flnm <- cmps.i$abr
}
flnm
library(Rdisop)
library(CompoundDb)
fml = "[M+H]+"
getMolecule(fml)$exactmass
add = "[M+H]+"
fml = "C6H4O3"
add = "[M+H]+"
getMolecule(fml)$exactmass
unlist(mass2mz(getMolecule(fml)$exactmass, add))
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C6H6O4"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C16H28O8"
add = "[M+NH4]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
unlist(mass2mz(getMolecule(fml)$exactmass, add))
unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056*2
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056*2,2)
fml = "C16H26O7"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056*2,2)
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056,2)
fml = "C16H26O8"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-H2O]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-(H2O)2]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056,2)
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056*2,2)
fml = "C16H22O8"
add = "[M+NH4]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056,2)
fml = "C8H9NO4"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C6H12O6"
add = "[M+Na]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C15H14O5"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C21H22O11"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C21H22O14S"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C15H14O6"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C21H22O12"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C22H24O12"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C16H16O9S"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C11H12O7S"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C17H22O11"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C11H14O8S"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C8H8O7S"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C9H8O3"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C12H15NO8"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C12H15NO7"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C6H7NO4S"
add = "[M+H-SO3]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C8H9NO5"
add = "[M+H-H2O]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C12H16O9"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C10H16O4"
add = "[M+NH4]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C10H16O4"
add = "[M+H-H2O]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-(H2O)2]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C8H10N4O3"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C16H20O9"
add = "[M+NH4]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-hexose]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-glucose]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
tmp = adducts()
View(tmp)
add = "[M+H-Hexose]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-Hexose-H2O]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+NH4]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C16H24O9"
add = "[M+NH4]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056,2)
add = "[M+Na]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
add = "[M+H-gluc]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
round(unlist(mass2mz(getMolecule(fml)$exactmass, add))-18.01056*2,2)
fml = "C17H20O10"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C17H20O9
"
fml = "C17H20O9"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
fml = "C9H10O4"
add = "[M+H]+"
round(unlist(mass2mz(getMolecule(fml)$exactmass, add)),2)
library(readxl)
manual <- read_xls("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls")
View(manual)
?read_xls
manual <- read_xls("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls",
skip = 3)
View(manual)
manual <- read_xls("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls",
skip = 3, na = "NF")
View(manual)
load("C:/Users/garciaalom/Documents/GitHub/MRI_cola_apple/data/RData/peak_areas.RData")
View(manual)
# terpin_glucuronide_1
manual <- subset(manual, select = c("Filename", "Area"))
View(manual)
View(peaks_NEG)
View(data_NEG)
colnames(data_NEG)
# terpin_glcd_1
data_NEG$Filename <- rownames(data_NEG)
xcms <- subset(data_NEG, select = c("Filename", "terpin_glcd_1"))
colnames(xcms) <- c("Filename", "Area")
colnames(manual) <- c("Filename", "Manual")
colnames(xcms) <- c("Filename", "XCMS")
data <- merge(manual, xcms, by = "Filename")
data[is.na(data)] <- 0
plot(data$Manual, data$XCMS)
cor(data$Manual, data$XCMS)
read_excel_allsheets <- function(filename, tibble = FALSE) {
# I prefer straight data.frames
# but if you like tidyverse tibbles (the default with read_excel)
# then just pass tibble = TRUE
sheets <- readxl::excel_sheets(filename)
x <- lapply(sheets, function(X) readxl::read_excel(filename, sheet = X))
if(!tibble) x <- lapply(x, as.data.frame)
names(x) <- sheets
x
}
read_excel_allsheets <- function(filename, tibble = FALSE) {
sheets <- readxl::excel_sheets(filename)
x <- lapply(sheets, function(X) readxl::read_excel(filename, sheet = X,
skip = 3, na = "NF"))
if(!tibble) x <- lapply(x, as.data.frame)
names(x) <- sheets
x
}
manual <- read_excel_allsheets("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls")
View(manual)
readxl::excel_sheets(filename)("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls")
readxl::excel_sheets("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls")
View(manual)
manual_list <- read_excel_allsheets("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls")
View(manual)
length(manual_list)-2)
length(manual_list)-2
manual <- data.frame(matrix(nrow = nrow(manual_list[[1]]), ncol = length(manual_list)-2))
rownames(manual) <- manual_list[[1]][,"Filename"]
manual_list[[1]]
manual_list[[1]]$Filename
sheets <- readxl::excel_sheets("//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls")
sheets
sheets <- sheets[!sheets %in% c("Component", "mdlCalcs")]
sheets
rm(list=ls())
filename <- "//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls"
sheets <- readxl::excel_sheets(filename)
sheets <- sheets[!sheets %in% c("Component", "mdlCalcs")]
x <- read_xls(filename, sheet = x[1], skip = 3, na = "NF")
x <- read_xls(filename, sheet = sheets[1], skip = 3, na = "NF")
View(x)
x <- x[!is.na(x$`Sample Type`), ]
View(x)
x <- subset(x, select = c("Filename", "Area"))
View(x)
colnames(x) <- c("Filename", sheets[1])
View(x)
x[is.na(x)] <- 0
View(x)
manual <- data.frame(matrix(nrow = nrow(x), ncol = length(sheets)))
manual <- data.frame(matrix(nrow = nrow(x), ncol = 1))
colnames(manual) <- "Filename"
rm(list=ls())
filename <- "//10.0.0.105/waters/experiments/orbitrap_raw_files/202011_FB_MRI_validation/quantification/quanti_NEG_Long.xls"
sheets <- readxl::excel_sheets(filename)
sheets <- sheets[!sheets %in% c("Component", "mdlCalcs")]
manual <- read_xls(filename, sheet = sheets[1], skip = 3, na = "NF")
manual <- manual[!is.na(manual$`Sample Type`), ]
manual <- subset(manual, select = c("Filename", "Area"))
colnames(manual) <- c("Filename", sheets[1])
manual[is.na(manual)] <- 0
i=2
x <- read_xls(filename, sheet = sheets[i], skip = 3, na = "NF")
x <- x[!is.na(x$`Sample Type`), ]
x <- subset(x, select = c("Filename", "Area"))
colnames(x) <- c("Filename", sheets[i])
x[is.na(x)] <- 0
for(i in 2:length(sheets)){
x <- read_xls(filename, sheet = sheets[i], skip = 3, na = "NF")
x <- x[!is.na(x$`Sample Type`), ]
x <- subset(x, select = c("Filename", "Area"))
colnames(x) <- c("Filename", sheets[i])
x[is.na(x)] <- 0
manual <- merge(manual, x, by = "Filename")
}
rm(i, x, sheets, filename)
View(manual)
colnames(manual)
load("C:/Users/garciaalom/Documents/GitHub/MRI_cola_apple/data/RData/peak_areas.RData")
colnames(data_NEG)
abr <- data.frame(rbind(
c("dioh_cineol_glucuronide", "diOHcineol_diOHfenchol_glcd")
c("carbonic_glucuronide", "carvonic_glcd"),
c("terpin_glucuronide_1", "terpin_glcd_1"),
c("terpin_glucuronide_2", "terpin_glcd_2"),
c("terpin_glucuronide_3", "terpin_glcd_3"),
c("terpin_glucuronide_4", "terpin_glcd_4"),
c("terpin_glucuronide_5", "terpin_glcd_5")
c("phloretin_glucuronide", "phloretin_glcd")
c("dioh_phenyl_valerolactone_sŤ_1", "diOHphenyl_valerolactone_sulf")
))
abr <- data.frame(rbind(
c("dioh_cineol_glucuronide", "diOHcineol_diOHfenchol_glcd"),
c("carbonic_glucuronide", "carvonic_glcd"),
c("terpin_glucuronide_1", "terpin_glcd_1"),
c("terpin_glucuronide_2", "terpin_glcd_2"),
c("terpin_glucuronide_3", "terpin_glcd_3"),
c("terpin_glucuronide_4", "terpin_glcd_4"),
c("terpin_glucuronide_5", "terpin_glcd_5")
c("phloretin_glucuronide", "phloretin_glcd"),
c("dioh_phenyl_valerolactone_sŤ_1", "diOHphenyl_valerolactone_sulf")
))
rbind(
c("dioh_cineol_glucuronide", "diOHcineol_diOHfenchol_glcd"),
c("carbonic_glucuronide", "carvonic_glcd"),
c("terpin_glucuronide_1", "terpin_glcd_1"),
c("terpin_glucuronide_2", "terpin_glcd_2"),
c("terpin_glucuronide_3", "terpin_glcd_3"),
c("terpin_glucuronide_4", "terpin_glcd_4"),
c("terpin_glucuronide_5", "terpin_glcd_5")
c("phloretin_glucuronide", "phloretin_glcd"),
c("dioh_phenyl_valerolactone_sŤ_1", "diOHphenyl_valerolactone_sulf")
)
abr <- data.frame(rbind(
c("dioh_cineol_glucuronide", "diOHcineol_diOHfenchol_glcd"),
c("carbonic_glucuronide", "carvonic_glcd"),
c("terpin_glucuronide_1", "terpin_glcd_1"),
c("terpin_glucuronide_2", "terpin_glcd_2"),
c("terpin_glucuronide_3", "terpin_glcd_3"),
c("terpin_glucuronide_4", "terpin_glcd_4"),
c("terpin_glucuronide_5", "terpin_glcd_5"),
c("phloretin_glucuronide", "phloretin_glcd"),
c("dioh_phenyl_valerolactone_sŤ_1", "diOHphenyl_valerolactone_sulf")
))
View(abr)
colnames(abr) <- c("manual", "xcms")
View(abr)
load("C:/Users/garciaalom/Documents/GitHub/MRI_cola_apple/data/RData/peak_areas.RData")
data_NEG$Filename <- rownames(data_NEG)
xcms <- subset(data_NEG, select = c("Filename", abr$xcms))
data <- merge(manual, xcms, by = "Filename")
View(data)
data$Filename[205]
data$xcms[205]
xcms$Filename[205]
manual$Filename[205]
manual$Filename <- gsub("ul_", "uL_")
data <- merge(manual, xcms, by = "Filename")
manual$Filename <- gsub("ul_", "uL_", manual$Filename)
data <- merge(manual, xcms, by = "Filename")
abr$cor <- NA
i=1
abr$manual[i]
data[,abr$manual[i]]
cor(data[,abr$manual[i]], data[,abr$xcms[i]])
for(i in 1:nrow(abr)){
abr$cor <- cor(data[,abr$manual[i]], data[,abr$xcms[i]])
}
View(abr)
data[,abr$manual[i]]
grep("valerolactone", colnames(manual))
library(xcms)
?manualChromPeaks
shiny::runApp('GitHub/MS2_library')
library(shiny)
library(Spectra)
library(CluMSID)
library(MetaboCoreUtils)
library(Rdisop)
library(MsCoreUtils)
library(CompoundDb)
library(xcms)
#db <- read.csv("database.csv")
load("MS2_library.RData")
rm(startpoint)
setwd("~/GitHub/MS2_library")
library(shiny)
library(Spectra)
library(CluMSID)
library(MetaboCoreUtils)
library(Rdisop)
library(MsCoreUtils)
library(CompoundDb)
library(xcms)
#db <- read.csv("database.csv")
load("MS2_library.RData")
rm(startpoint)
df <- read.table("x_MS2.txt")
x_spd <- DataFrame(
msLevel = 2L,
polarity = 1L,
id = "x",
name = "x")
x_spd$mz <- list(df[,1])
x_spd$intensity <- list(df[,2])
x_spd <- Spectra(x_spd)
c_spd <- c(x_spd, spd)
tb <- cbind(c_spd$name[order(Spectra::compareSpectra(
c_spd, ppm = 50)[,1], decreasing = T)],
Spectra::compareSpectra(c_spd, ppm = 50)[,1][order(
Spectra::compareSpectra(c_spd, ppm = 50)[,1],
decreasing = T)]
)[-1,]
colnames(tb) <- c("name", "corr")
tb[,2] <- sprintf("%.3f", round(as.numeric(tb[,2]), 3))
tb
j <- 1
i <- which(spd$name == tb[j,1])
plot(unlist(mz(spd[i])), unlist(intensity(spd[i])),
type = "h", main = db$name[i],
xlab = "m/z", ylab = "intensity",
xlim = c(min(unlist(mz(spd[i])))-10, max(unlist(mz(spd[i])))+10),
ylim = c(0, max(unlist(intensity(spd[i])*1.1)))
)
text(unlist(mz(spd[i])), unlist(intensity(spd[i])),
sprintf("%.4f", round(unlist(mz(spd[i])), 4)),
offset = -1, pos = 2, srt = -30)
runApp()
